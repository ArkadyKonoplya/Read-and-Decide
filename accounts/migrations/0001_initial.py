# Generated by Django 3.2.9 on 2021-12-18 03:38

import accounts.managers
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='profile_pics')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(choices=[('Patient', 'Patient'), ('Doctor', 'Doctor'), ('Case Manager', 'Case Manager')], default='Patient', max_length=20)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('activation_token', models.CharField(blank=True, max_length=6, null=True)),
                ('activation_expired', models.DateTimeField(blank=True, null=True)),
                ('phone_activation_token', models.CharField(blank=True, max_length=6, null=True)),
                ('phone_activation_expired', models.DateTimeField(blank=True, null=True)),
                ('password_reset_token', models.CharField(blank=True, max_length=6, null=True)),
                ('password_reset_expired', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_approved', models.BooleanField(null=True)),
                ('email', models.EmailField(max_length=254)),
                ('title', models.CharField(blank=True, choices=[('MD - Psychiatry', 'MD - Psychiatry'), ('MD - Neurology', 'MD - Neurology'), ('MD - Child and Adolescent Psychiatry', 'MD - Child and Adolescent Psychiatry'), ('MD - Adult Psychiatry', 'MD - Adult Psychiatry'), ('MD - Geriatric Psychiatry', 'MD - Geriatric Psychiatry'), ('MD - Addiction Psychiatry', 'MD - Addiction Psychiatry'), ('MD - Emergency Psychiatry', 'MD - Emergency Psychiatry'), ('DO - Psychiatry', 'DO - Psychiatry'), ('DO - Neurology', 'DO - Neurology'), ('DO - Child and Adolescent Psychiatry', 'DO - Child and Adolescent Psychiatry'), ('DO - Adult Psychiatry', 'DO - Adult Psychiatry'), ('DO - Geriatric Psychiatry', 'DO - Geriatric Psychiatry'), ('DO - Addiction Psychiatry', 'DO - Addiction Psychiatry'), ('DO - Emergency Psychiatry', 'DO - Emergency Psychiatry'), ('APRN - Psychiatry', 'APRN - Psychiatry'), ('PA - Psychiatry', 'PA - Psychiatry'), ('PHD - Psychology', 'PHD - Psychology'), ('LCSW - Therapy', 'LCSW - Therapy')], max_length=36, null=True)),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('since', models.DateField(blank=True, null=True)),
                ('board_certified_speciality', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('states', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2), blank=True, null=True, size=None)),
                ('state_license_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, default=list, null=True, size=None)),
                ('npi', models.CharField(blank=True, max_length=20, null=True)),
                ('dea', models.CharField(blank=True, max_length=20, null=True)),
                ('address1', models.CharField(blank=True, max_length=200, null=True)),
                ('address2', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('fax_number', models.CharField(blank=True, max_length=50, null=True)),
                ('timezone', timezone_field.fields.TimeZoneField(default='Pacific/Honolulu')),
                ('sun_start', models.TimeField(default='09:00:00')),
                ('sun_end', models.TimeField(default='18:00:00')),
                ('sun_off', models.BooleanField(default=True)),
                ('mon_start', models.TimeField(default='09:00:00')),
                ('mon_end', models.TimeField(default='18:00:00')),
                ('mon_off', models.BooleanField(default=False)),
                ('tue_start', models.TimeField(default='09:00:00')),
                ('tue_end', models.TimeField(default='18:00:00')),
                ('tue_off', models.BooleanField(default=False)),
                ('wed_start', models.TimeField(default='09:00:00')),
                ('wed_end', models.TimeField(default='18:00:00')),
                ('wed_off', models.BooleanField(default=False)),
                ('thu_start', models.TimeField(default='09:00:00')),
                ('thu_end', models.TimeField(default='18:00:00')),
                ('thu_off', models.BooleanField(default=False)),
                ('fri_start', models.TimeField(default='09:00:00')),
                ('fri_end', models.TimeField(default='18:00:00')),
                ('fri_off', models.BooleanField(default=False)),
                ('sat_start', models.TimeField(default='09:00:00')),
                ('sat_end', models.TimeField(default='18:00:00')),
                ('sat_off', models.BooleanField(default=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('activation_token', models.CharField(blank=True, max_length=6, null=True)),
                ('activation_expired', models.DateTimeField(blank=True, null=True)),
                ('phone_activation_token', models.CharField(blank=True, max_length=6, null=True)),
                ('phone_activation_expired', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InsurancePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_subscribed', models.BooleanField(null=True)),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Trans', 'Trans'), ('Non-binary', 'Non Binary')], max_length=20, null=True)),
                ('address1', models.CharField(blank=True, max_length=200, null=True)),
                ('address2', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('insurance_plan_username', models.CharField(max_length=50)),
                ('pharmacy_plan', models.CharField(blank=True, max_length=20, null=True)),
                ('pharmacy_member', models.CharField(blank=True, max_length=20, null=True)),
                ('pharmacy_bin', models.CharField(blank=True, max_length=20, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('height_unit', models.CharField(choices=[('ft', 'Ft'), ('cm', 'Cm')], default='ft', max_length=2)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('weight_unit', models.CharField(choices=[('lb', 'Lb'), ('kg', 'Kg')], default='lb', max_length=2)),
                ('medications', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('allergies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('smoke', models.BooleanField(default=False)),
                ('alcohol', models.BooleanField(default=False)),
                ('asthma', models.BooleanField(default=False)),
                ('kidney_problems', models.BooleanField(default=False)),
                ('high_blood_pressure', models.BooleanField(default=False)),
                ('diabetes', models.BooleanField(default=False)),
                ('heart_problems', models.BooleanField(default=False)),
                ('headaches', models.BooleanField(default=False)),
                ('urinary_tract_infections', models.BooleanField(default=False)),
                ('depression', models.BooleanField(default=False)),
                ('seizures', models.BooleanField(default=False)),
                ('stroke', models.BooleanField(default=False)),
                ('thyroid_disease', models.BooleanField(default=False)),
                ('arrhythmias', models.BooleanField(default=False)),
                ('anxiety', models.BooleanField(default=False)),
                ('panic_attacks', models.BooleanField(default=False)),
                ('copd', models.BooleanField(default=False)),
                ('eczema', models.BooleanField(default=False)),
                ('psoriasis', models.BooleanField(default=False)),
                ('cancer', models.BooleanField(default=False)),
                ('other_problems', models.CharField(blank=True, max_length=200, null=True)),
                ('family_asthma', models.BooleanField(default=False)),
                ('family_stroke', models.BooleanField(default=False)),
                ('family_diabetes', models.BooleanField(default=False)),
                ('family_heart_problems', models.BooleanField(default=False)),
                ('family_high_blood_pressure', models.BooleanField(default=False)),
                ('family_thyroid_disease', models.BooleanField(default=False)),
                ('family_arrhythmias', models.BooleanField(default=False)),
                ('family_anxiety', models.BooleanField(default=False)),
                ('family_panic_attacks', models.BooleanField(default=False)),
                ('family_copd', models.BooleanField(default=False)),
                ('family_eczema', models.BooleanField(default=False)),
                ('family_psoriasis', models.BooleanField(default=False)),
                ('family_headaches', models.BooleanField(default=False)),
                ('family_seizures', models.BooleanField(default=False)),
                ('family_depression', models.BooleanField(default=False)),
                ('family_kidney_problems', models.BooleanField(default=False)),
                ('family_urinary_tract_infections', models.BooleanField(default=False)),
                ('family_cancer', models.BooleanField(default=False)),
                ('family_other_problems', models.CharField(blank=True, max_length=200, null=True)),
                ('activation_token', models.CharField(blank=True, max_length=6, null=True)),
                ('activation_expired', models.DateTimeField(blank=True, null=True)),
                ('phone_activation_token', models.CharField(blank=True, max_length=6, null=True)),
                ('phone_activation_expired', models.DateTimeField(blank=True, null=True)),
                ('insurance_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.insuranceplan')),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address1', models.CharField(blank=True, max_length=200, null=True)),
                ('address2', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(choices=[('Me', 'Me'), ('Daughter', 'Daughter'), ('Domestic Partner', 'Domestic Partner'), ('Husband', 'Husband'), ('Other', 'Other'), ('Parent', 'Parent'), ('Son', 'Son')], default='Me', max_length=20)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.patient')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_address1', models.CharField(blank=True, max_length=200, null=True)),
                ('patient_address2', models.CharField(blank=True, max_length=200, null=True)),
                ('patient_city', models.CharField(blank=True, max_length=20, null=True)),
                ('patient_state', models.CharField(blank=True, max_length=30, null=True)),
                ('patient_zip', models.CharField(blank=True, max_length=10, null=True)),
                ('patient_phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('patient_fax_number', models.CharField(blank=True, max_length=50, null=True)),
                ('patient_ssn', models.CharField(blank=True, max_length=50, null=True)),
                ('medication', models.CharField(blank=True, max_length=100, null=True)),
                ('dispensing_allowed', models.CharField(blank=True, max_length=50, null=True)),
                ('substitute_allowed', models.BooleanField(default=False)),
                ('quantity', models.CharField(blank=True, max_length=50, null=True)),
                ('dosage_directions', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.CharField(blank=True, max_length=100, null=True)),
                ('prescriber_state_license_number', models.CharField(blank=True, max_length=50, null=True)),
                ('prescriber_address1', models.CharField(blank=True, max_length=200, null=True)),
                ('prescriber_address2', models.CharField(blank=True, max_length=200, null=True)),
                ('prescriber_city', models.CharField(blank=True, max_length=20, null=True)),
                ('prescriber_state', models.CharField(blank=True, max_length=30, null=True)),
                ('prescriber_zip', models.CharField(blank=True, max_length=10, null=True)),
                ('prescriber_phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('prescriber_fax_number', models.CharField(blank=True, max_length=50, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(choices=[('Me', 'Me'), ('Daughter', 'Daughter'), ('Domestic Partner', 'Domestic Partner'), ('Husband', 'Husband'), ('Other', 'Other'), ('Parent', 'Parent'), ('Son', 'Son')], max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='first name')),
                ('status', models.CharField(choices=[('Invited', 'Invited'), ('Accepted', 'Accepted'), ('Denied', 'Denied')], default='Invited', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('duration', models.IntegerField(null=True)),
                ('type', models.CharField(max_length=50, null=True)),
                ('recurring', models.CharField(max_length=50, null=True)),
                ('notes', models.JSONField(blank=True, null=True)),
                ('questionnaires', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Requested', 'Requested'), ('Confirmed', 'Confirmed'), ('Rescheduled', 'Rescheduled'), ('Denied', 'Denied')], default='Requested', max_length=20)),
                ('sent', models.BooleanField(default=False)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.patient')),
                ('pharmacy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.pharmacy')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='doctors',
            field=models.ManyToManyField(blank=True, to='accounts.Doctor'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='patients',
            field=models.ManyToManyField(blank=True, to='accounts.Patient'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
